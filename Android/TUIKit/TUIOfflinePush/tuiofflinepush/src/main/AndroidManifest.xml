<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.tencent.qcloud.tim.tuiofflinepush">

    <!-- ********************************* OEMPush Permission begin************************ -->
    <!-- 如果选择开启 TPNS 通道，OEM 的相关以下代码可以删掉 -->
    <!-- ********OPPO 推送 start******** -->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <!--********OPPO 推送 end******** -->

    <!--********华为推送权限设置******** -->
    <permission
        android:name="${applicationId}.permission.PROCESS_PUSH_MSG"
        android:protectionLevel="signatureOrSystem" />

    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE" />
    <uses-permission android:name="${applicationId}.permission.PROCESS_PUSH_MSG" />

    <!--********小米推送权限设置******** -->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />

    <!--********魅族推送权限设置******** -->
    <!--兼容flyme5.0以下版本，魅族内部集成pushSDK必填，不然无法收到消息  -->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />

    <permission
        android:name="${applicationId}.push.permission.MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.push.permission.MESSAGE" />

    <!-- 兼容flyme3.0配置权限 -->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />

    <permission
        android:name="${applicationId}.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />

    <!-- ********************************* OEMPush Permission end************************ -->

    <application>

        <provider
            android:name="com.tencent.qcloud.tim.tuiofflinepush.TUIOfflinePushService"
            android:authorities="${applicationId}.TUIOfflinePush.Init"
            android:enabled="true"
            android:exported="false" />


        <!-- ********************************* OEMPush begin************************ -->
        <!-- 如果选择开启 TPNS 通道，OEM 的相关以下代码可以删掉 -->

        <!-- ********小米推送service和receiver设置start******** -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />
        <!-- 注：此service必须在3.0.1版本以后（包括3.0.1版本）加入 -->

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />
        <!-- 注：此service必须在2.2.5版本以后（包括2.2.5版本）加入 -->

        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>

        <!-- 自实现小米推送的接收广播 -->
        <receiver
            android:name="com.tencent.qcloud.tim.tuiofflinepush.OEMPush.XiaomiMsgReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- ********小米推送service和receiver设置end******** -->

        <!-- ********华为推送设置start******** -->
        <service
            android:name="com.tencent.qcloud.tim.tuiofflinepush.OEMPush.HUAWEIHmsMessageService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- ********华为推送设置end******** -->

        <!-- ********魅族推送设置start******** -->
        <receiver android:name="com.tencent.qcloud.tim.tuiofflinepush.OEMPush.MEIZUPushReceiver"
            android:exported="true" >
            <intent-filter>

                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收unregister消息 -->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本Flyme3推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>
        <!-- ********魅族推送设置end******** -->

        <!-- ********vivo推送设置start******** -->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />

        <activity
            android:name="com.vivo.push.sdk.LinkProxyClientActivity"
            android:exported="false"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <!-- push应用定义消息receiver声明 -->
        <receiver android:name="com.tencent.qcloud.tim.tuiofflinepush.OEMPush.VIVOPushMessageReceiverImpl"
            android:exported="true">
            <intent-filter>

                <!-- 接收push消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>

        <!-- ********vivo推送设置end******** -->

        <!-- ********海外google云消息传递start******** -->
        <service
            android:name="com.tencent.qcloud.tim.tuiofflinepush.OEMPush.GoogleFCMMsgService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- ********海外google云消息传递end******** -->

        <!-- ********OPPO 推送 start******** -->
        <service
            android:name="com.heytap.msp.push.service.CompatibleDataMessageCallbackService"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE"
            tools:replace="android:exported"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <!-- 兼容Q以下版本 -->

        <service
            android:name="com.heytap.msp.push.service.DataMessageCallbackService"
            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE"
            tools:replace="android:exported"
            android:exported="true">
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />
                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <!-- 兼容Q版本 -->
        <!-- ********OPPO 推送 end******** -->

        <!-- ********************************* OEMPush end************************ -->

        <!-- ********************************* TPNSPush begin************************ -->
        <!-- 如果选择开启 OEM 通道，TPNS 的相关以下代码可以删掉 -->

        <!--如果您的应用服务接入点为广州，SDK 默认实现该配置。
            其他服务接入点域名如下：
               上海：tpns.sh.tencent.com
               新加坡：tpns.sgp.tencent.com
               中国香港：tpns.hk.tencent.com
        -->
        <meta-data
            android:name="XG_SERVER_SUFFIX"
            android:value="tpns.hk.tencent.com" />

        <meta-data android:name="XG_V2_ACCESS_ID" android:value="" tools:replace="android:value" />
        <meta-data android:name="XG_V2_ACCESS_KEY" android:value="" tools:replace="android:value" />

        <!--TPNS 可选：配置首次启动应用时不自动启动推送服务进程，直到调用 XGPushManager.registerPush 接口才开始启动-->
        <meta-data
            android:name="XG_SERVICE_PULL_UP_OFF"
            android:value="true" />

        <!-- TPNS receiver -->
        <receiver android:name="com.tencent.qcloud.tim.tuiofflinepush.TPNSPush.TPNSMessageReceiver"
            android:exported="true" >
            <intent-filter>
                <!-- 接收消息透传 -->
                <action android:name="com.tencent.android.xg.vip.action.PUSH_MESSAGE" />
                <!-- 监听注册、反注册、设置/删除标签、通知被点击等处理结果 -->
                <action android:name="com.tencent.android.xg.vip.action.FEEDBACK" />
            </intent-filter>
        </receiver>

        <!-- TPNS 如需兼容 Android P，需要添加使用 Apache HTTP client 库，在 AndroidManifest 的 application 节点内添加以下配置即可。-->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <!-- ********************************* TPNSPush end************************ -->
    </application>
</manifest>