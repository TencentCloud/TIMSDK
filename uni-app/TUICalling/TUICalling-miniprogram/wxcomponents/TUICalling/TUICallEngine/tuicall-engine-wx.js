import{TRTC as t,TIM as e,TSignaling as i}from"./libSrcConfig";class a{on(t,e,i){"function"==typeof e?(this._stores=this._stores||{},(this._stores[t]=this._stores[t]||[]).push({cb:e,ctx:i})):console.error("listener must be a function")}emit(t){this._stores=this._stores||{};let e,i=this._stores[t];if(i){i=i.slice(0),e=[].slice.call(arguments,1),e[0]={eventCode:t,data:e[0]};for(let t=0,a=i.length;t<a;t++)i[t].cb.apply(i[t].ctx,e)}}off(t,e){if(this._stores=this._stores||{},!arguments.length)return void(this._stores={});const i=this._stores[t];if(!i)return;if(1===arguments.length)return void delete this._stores[t];let a;for(let t=0,s=i.length;t<s;t++)if(a=i[t].cb,a===e){i.splice(t,1);break}}}const s={INVITED:"INVITED",GROUP_CALL_INVITEE_LIST_UPDATE:"GROUP_CALL_INVITEE_LIST_UPDATE",USER_ENTER:"USER_ENTER",USER_LEAVE:"USER_LEAVE",USER_ACCEPT:"USER_ACCEPT",USER_UPDATE:"USER_UPDATE",REJECT:"REJECT",NO_RESP:"NO_RESP",LINE_BUSY:"LINE_BUSY",CALLING_CANCEL:"CALLING_CANCEL",CALLING_TIMEOUT:"CALLING_TIMEOUT",CALL_END:"CALL_END",USER_VIDEO_AVAILABLE:"USER_VIDEO_AVAILABLE",USER_AUDIO_AVAILABLE:"USER_AUDIO_AVAILABLE",USER_VOICE_VOLUME:"USER_VOICE_VOLUME",SDK_READY:"SDK_READY",KICKED_OUT:"KICKED_OUT",CALL_MODE:"CALL_MODE",HANG_UP:"HANG_UP",ERROR:"ERROR"},n={IDLE:"idle",CALLING:"calling",CONNECTED:"connected"},o=1,r=2,l=3,h=4,d=5,c=1,u={AUDIO:1,VIDEO:2},T=["","audioCall","videoCall"],p="audio",I="video",E={EAR:"ear",SPEAKER:"speaker"},g={BASE:Math.pow(2,16),PRO:Math.pow(2,17),ULTIMATE:Math.pow(2,18)};class D{constructor(t){this.TSignaling=t.TSignaling}handleNewSignaling(t,e){return{extraInfo:"",...t,version:4,businessID:"av_call",platform:"MiniApp",data:{cmd:T[t.call_type],room_id:t.room_id,message:"",...e}}}extractCallingInfoFromMessage(t){if(!t||"TIMCustomElem"!==t.type)return"";const e=JSON.parse(t.payload.data);if(e.businessID!==c)return"";switch(e.actionType){case o:{const t=JSON.parse(e.data);return t.call_end>0&&!e.groupID?t.call_end:0!==t.call_end&&t.room_id?"发起通话":"结束群聊"}case r:return"取消通话";case l:return"已接听";case h:return"拒绝通话";case d:return"无应答";default:return""}}handleError(t,e){return console.error(`TSignalingClint ${e}`,t),t}_handleInviteData(t){const{type:e,roomID:i,userIDList:a,hangup:s,switchMode:n}=t;if(s)return JSON.stringify(this.handleNewSignaling({version:0,call_type:e,call_end:s.callEnd},{cmd:"hangup"}));if(n){const t={version:0,call_type:e,room_id:i},a={cmd:"switchToVideo"};return n===p&&(t.switch_to_audio_call="switch_to_audio_call",a.cmd="switchToAudio"),JSON.stringify(this.handleNewSignaling(t,a))}return JSON.stringify(this.handleNewSignaling({version:0,call_type:e,room_id:i},{userIDs:a}))}_handleInviteGroupData(t){const{type:e,roomID:i,hangup:a}=t;let s=null;return s=a?JSON.stringify(this.handleNewSignaling({version:0,call_type:e,call_end:a.call_end},{cmd:"hangup"})):JSON.stringify(this.handleNewSignaling({version:0,call_type:e,room_id:i})),s}async _inviteInGroupTRTC(t){const{userIDList:e,roomID:i,type:a,timeout:s,offlinePushInfo:n}=t,o={code:0,data:[]};try{const t=e.map((t=>this.invite({userID:t,type:a,roomID:i,timeout:s,offlinePushInfo:n,userIDList:e}))),r=await Promise.all(t);o.data=r}catch(t){o.code=1,o.error=t,this.handleError(t,"inviteGroup TRTC")}return o}async invite(t){const{userID:e,offlinePushInfo:i,hangup:a,switchMode:s}=t;try{return await this.TSignaling.invite({userID:e,data:this._handleInviteData(t),timeout:a?0:30,offlinePushInfo:i})}catch(t){return a?this.handleError(t,"hangup C2C"):s?this.handleError(t,s):this.handleError(t,"invite")}}async inviteGroup(t){const{groupID:e,userIDList:i,offlinePushInfo:a,hangup:s}=t;if(!e)return await this._inviteInGroupTRTC(t);try{return await this.TSignaling.inviteInGroup({groupID:e,inviteeList:i,timeout:s?0:30,data:this._handleInviteGroupData(t),offlinePushInfo:a})}catch(t){return s?this.handleError(t,"hangup group"):this.handleError(t,"inviteGroup")}}async accept(t,e){const{inviteID:i,type:a,...s}=t;try{return await this.TSignaling.accept({inviteID:i,data:JSON.stringify(this.handleNewSignaling({version:0,call_type:a,...s},e))})}catch(t){return this.handleError(t,"accept")}}async reject(t){const{inviteID:e,type:i,lineBusy:a}=t,s={version:0,call_type:i};let n=null;a?(s.line_busy=a,n=JSON.stringify(this.handleNewSignaling(s,{message:"lineBusy"}))):n=JSON.stringify(this.handleNewSignaling(s));try{return await this.TSignaling.reject({inviteID:e,data:n})}catch(t){return a?this.handleError(t,"line_busy"):this.handleError(t,"reject")}}async cancel(t){const{inviteIDList:e,callType:i}=t,a=[];try{for(let t=0;t<e.length;t++){const s=e[t],n=await this.TSignaling.cancel({inviteID:s,data:JSON.stringify(this.handleNewSignaling({version:0,call_type:i}))});a.push(n)}return a}catch(t){return this.handleError(t,"cancel")}}async lastOneHangup(t){const{userIDList:e,callType:i,callEnd:a,groupID:s,isGroup:n}=t;return n?await this.inviteGroup({groupID:s,userIDList:e,type:i,hangup:{call_end:s?0:a}}):await this.invite({userID:e[0],type:i,hangup:{callEnd:a}})}async switchCallMode(t){const{userID:e,callType:i,roomID:a,mode:s}=t;return this.invite({userID:e,type:i,roomID:a,switchMode:s})}destroyed(){this.TSignaling=null}}class _{constructor(t){this._emitter=t.emitter}onCallEnd(t){const{userID:e,callEnd:i,message:a}=t;this._emitter.emit(s.CALL_END,{userID:e,callEnd:i,message:a})}onInvited(t){const{sponsor:e,inviteeList:i,isFromGroup:a,inviteData:n,inviteID:o}=t;this._emitter.emit(s.INVITED,{sponsor:e,inviteeList:i,isFromGroup:a,inviteID:o,inviteData:n})}onLineBusy(t){const{inviteID:e,invitee:i}=t;this._emitter.emit(s.LINE_BUSY,{inviteID:e,invitee:i,reason:"line busy"})}onReject(t){const{inviteID:e,invitee:i}=t;this._emitter.emit(s.REJECT,{inviteID:e,invitee:i,reason:"reject"})}onNoResp(t){const{groupID:e="",inviteID:i,sponsor:a,timeoutUserList:n}=t;this._emitter.emit(s.NO_RESP,{groupID:e,inviteID:i,sponsor:a,timeoutUserList:n})}onCancel(t){const{inviteID:e,invitee:i}=t;this._emitter.emit(s.CALLING_CANCEL,{inviteID:e,invitee:i})}onTimeout(t){const{inviteID:e,groupID:i,sponsor:a,timeoutUserList:n}=t;this._emitter.emit(s.CALLING_TIMEOUT,{groupID:i,inviteID:e,sponsor:a,timeoutUserList:n})}onUserAccept(t,e){this._emitter.emit(s.USER_ACCEPT,{userID:t,userList:e})}onUserEnter(t,e){this._emitter.emit(s.USER_ENTER,{userID:t,playerList:e})}onUserLeave(t,e){this._emitter.emit(s.USER_LEAVE,{userID:t,playerList:e})}onUserUpdate(t){const{pusher:e,playerList:i}=t;this._emitter.emit(s.USER_UPDATE,{pusher:e,playerList:i})}onSdkReady(t){this._emitter.emit(s.SDK_READY,t)}onKickedOut(t){this._emitter.emit(s.KICKED_OUT,t)}onCallMode(t){this._emitter.emit(s.CALL_MODE,t)}destroyed(){this._emitter=null}}const C="1.0.0",m="TUICallEngine";class v{static instance=null;static AUDIO_PLAYBACK_DEVICE=E;static MEDIA_TYPE=u;static EVENT=s;static STATUS=n;constructor(n){this.data={config:{sdkAppID:n.sdkAppID,userID:"",userSig:"",type:1}},this.initData(),this.EVENT=s,this.MEDIA_TYPE=u,this.CALL_TYPE=u,this._emitter=new a,this.TRTC=new t(this,{TUIScene:"TUICalling"}),wx.TUIScene="TUICalling",n.tim?this.tim=n.tim:this.tim=e.create({SDKAppID:n.sdkAppID}),wx.$TSignaling||(wx.$TSignaling=new i({SDKAppID:n.sdkAppID,tim:this.tim})),this.TSignalingClient=new D({TSignaling:wx.$TSignaling}),this.TRTCCallingDelegate=new _({emitter:this._emitter}),console.info(`${m} SDK Version:${C}, SDKAppID:${n.sdkAppID}`)}static createInstance(t){return v.instance||(v.instance=new v(t)),v.instance.initData(),v.instance}static destroyInstance(){null!==v.instance&&v.instance.destroyed()}initData(){const t={callStatus:n.IDLE,soundMode:this.data.config.type===u.AUDIO?E.EAR:E.SPEAKER,active:!1,invitation:{inviteID:"",inviter:"",type:"",roomID:""},startTalkTime:0,localUser:null,remoteUsers:[],timer:null,chatTimeNum:0,chatTime:"00:00:00",screen:"pusher",pusher:{},playerList:[],roomID:"",groupInviteID:[],isSponsor:!0,_unHandledInviteeList:[],_connectUserIDList:[],_isGroupCall:!1,_groupID:"",_switchCallModeStatus:!0,enterRoomStatus:!1,isCallEnd:!0};this.data={...this.data,...t}}async handleSwitchCallModeTSignaling(t,e){const i={inviteID:t,type:e.call_type},a={cmd:"switchToVideo"};e.call_type===u.VIDEO&&(i.switch_to_audio_call="switch_to_audio_call",a.cmd="switchToAudio");const s=await this.TSignalingClient.accept(i,a);this.setSwitchCallModeStatus(!1),this.handleCallMode(e.call_type,s)}handleCallMode(t,e){console.log(`${m}.handleCallMode - type`,t);const i=t!==u.VIDEO;this.setPusherAttributesHandler({enableCamera:i}),i?(this.data.config.type=u.VIDEO,this.data.invitation.type=u.VIDEO):(this.data.config.type=u.AUDIO,this.data.invitation.type=u.AUDIO),this.TRTCCallingDelegate.onCallMode({type:this.data.config.type,message:e.data.message}),this.setSwitchCallModeStatus(!0)}judgeSwitchCallMode(t){return t.switch_to_audio_call&&"switch_to_audio_call"===t.switch_to_audio_call||t.data&&"switchToAudio"===t.data.cmd||t.data&&"switchToVideo"===t.data.cmd}handleNewInvitationReceived(t){console.log(m,"onNewInvitationReceived",`callStatus：${this.data.callStatus===n.CALLING||this.data.callStatus===n.CONNECTED}, inviteID:${t.data.inviteID} inviter:${t.data.inviter} inviteeList:${t.data.inviteeList} data:${t.data.data}`);const{data:{inviter:e,inviteeList:i,data:a,inviteID:s,groupID:o}}=t,r=JSON.parse(a),l=!!(o||i.length>=2||r.data&&r.data.userIDs&&r.data.userIDs.length>=2);if("hangup"===r?.data?.cmd)return void this.TRTCCallingDelegate.onCallEnd(e,r.call_end||0);let h=!1;if(l&&(!r.room_id||r.call_end&&0===r.call_end)&&(h=!0),!l&&r.call_end>=0&&(h=!0),h)return void this._reset(l?0:r.call_end);if(!this.data._isGroupCall&&this.judgeSwitchCallMode(r))return void this.handleSwitchCallModeTSignaling(s,r);if(this.data.callStatus===n.CALLING||this.data.callStatus===n.CONNECTED)return void this.TSignalingClient.reject({inviteID:s,type:a.call_type,lineBusy:"line_busy"});const d={_isGroupCall:!!l,_groupID:o||"",_unHandledInviteeList:[...i,e]};l&&!o&&(d._unHandledInviteeList=[...r.data.userIDs]),this.data.config.type=r.call_type,this.data.invitation.inviteID=s,this.data.invitation.inviter=e,this.data.invitation.type=r.call_type,this.data.invitation.roomID=r.room_id,this.data.isSponsor=!1,this.data._connectUserIDList=[e],this.data._isGroupCall=d._isGroupCall,this.data._groupID=d._groupID,this.data._unHandledInviteeList=d._unHandledInviteeList,this._getUserProfile([e]),this._setCallStatus(n.CALLING),console.log(`${m} NEW_INVITATION_RECEIVED invitation: `,this.data.callStatus,this.data.invitation);const c={sponsor:e,inviteeList:i,isFromGroup:l,inviteID:s,inviteData:{version:r.version,callType:r.call_type,roomID:r.room_id,callEnd:0}};this.setPusherAttributesHandler({enableCamera:this.data.config.type===u.VIDEO}),wx.createLivePusherContext().startPreview(),this.TRTCCallingDelegate.onInvited(c)}setInviteIDList(t){if(this.data.invitation.inviteID===t||""===this.data.invitation.inviteID)return void(this.data.invitation.inviteID="");const e=[...this.data.groupInviteID];this.data.groupInviteID=e.filter((e=>e!==t))}async handleInviteeAccepted(t){console.log(`${m} INVITEE_ACCEPTED inviteID:${t.data.inviteID} invitee:${t.data.invitee} data:`,t.data);const e=JSON.parse(t.data.data);this.data.callStatus!==n.IDLE?this.data._isGroupCall||!this.judgeSwitchCallMode(e)||this.data._switchCallModeStatus?(t.data.inviter===this._getUserID()&&this.data.callStatus===n.CALLING&&(this._setCallStatus(n.CONNECTED),this.TRTCCallingDelegate.onUserAccept(t.data.invitee,await this.getUserProfile(this.data._unHandledInviteeList.map((t=>({userID:t})))))),this.setInviteIDList(t.data.inviteID),this._getGroupCallFlag()&&this._setUnHandledInviteeList(t.data.invitee)):this.handleCallMode(this.data.invitation.type):this._reset()}handleInviteeRejected(t){if(console.log(`${m} INVITEE_REJECTED inviteID:${t.data.inviteID} invitee:${t.data.invitee} data:${t.data.data}`),this.data._isGroupCall||this.data._switchCallModeStatus||(console.log(`${m}.onInviteeRejected - Audio and video switching is not available`),this.setSwitchCallModeStatus(!0)),t.data.inviter!==this._getUserID())return;if(this.data.callStatus===n.CONNECTED){if(this.data.playerList.some((e=>e.userID===t.data.invitee)))return}this.setInviteIDList(t.data.inviteID);const e=JSON.parse(t.data.data),i=""===e.line_busy||"line_busy"===e.line_busy,a=e.data&&e.data.message&&"lineBusy"===e.data.message;this._getGroupCallFlag()?this._setUnHandledInviteeList(t.data.invitee,(t=>{if(0===t.length){const t=this.data.callStatus===n.CALLING,e=this.data.callStatus===n.CONNECTED&&0===this.data.playerList.length;(t||e)&&this._reset()}})):this._reset(0,i||a?"lineBusy":"reject")}handleInvitationCancelled(t){this.data.callStatus!==n.IDLE?(console.log(m,"onInvitationCancelled",`inviteID:${t.data.inviteID} inviter:${t.data.invitee} data:${t.data.data}`),this._setCallStatus(n.IDLE),this.TRTCCallingDelegate.onCancel({inviteID:t.data.inviteID,invitee:t.data.invitee}),this.data.isCallEnd=!1,this.setInviteIDList(t.data.inviteID),this._reset()):this._reset()}handleInvitationTimeout(t){console.log(m,"onInvitationTimeout",`data:${JSON.stringify(t)} inviteID:${t.data.inviteID} inviteeList:${t.data.inviteeList}`);const{groupID:e="",inviteID:i,inviter:a,inviteeList:s,isSelfTimeout:o}=t.data;if(this.data.callStatus!==n.IDLE){if(this.setInviteIDList(t.data.inviteID),o&&a===this._getUserID())return this.TRTCCallingDelegate.onNoResp({groupID:e,inviteID:i,sponsor:a,timeoutUserList:s}),void(this.data.callStatus!==n.CONNECTED&&(this.data.isCallEnd=!1,this._reset()));if(this.TRTCCallingDelegate.onTimeout({groupID:e,inviteID:i,sponsor:a,timeoutUserList:s}),this._getGroupCallFlag()){const t=this.data._unHandledInviteeList,e=[];if(t.forEach((t=>{-1===s.indexOf(t)&&e.push(t)})),this.data._unHandledInviteeList=e,0===e.length&&0===this.data.playerList.length){if(this.data.callStatus===n.CONNECTED)return void this.lastOneHangup({userIDList:[a],callType:this.data.config.type,callEnd:0});this.data.isCallEnd=!1,this._reset()}}else this.data.isCallEnd=!1,this._reset();s.includes(this._getUserID())&&this._setCallStatus(n.IDLE)}else this._reset()}handleSDKReady(){console.log(m,"TSignaling SDK ready"),this.TSignalingResolve(),this.TRTCCallingDelegate.onSdkReady({message:"SDK ready"});this.tim.getMyProfile().then((t=>{this.data.localUser=t.data})).catch((t=>{console.warn("getMyProfile error:",t)}))}handleKickedOut(){this.hangup(),this.TRTCCallingDelegate.onKickedOut({message:"kicked out"})}_addTSignalingEvent(){wx.$TSignaling.on(i.EVENT.NEW_INVITATION_RECEIVED,this.handleNewInvitationReceived,this),wx.$TSignaling.on(i.EVENT.INVITEE_ACCEPTED,this.handleInviteeAccepted,this),wx.$TSignaling.on(i.EVENT.INVITEE_REJECTED,this.handleInviteeRejected,this),wx.$TSignaling.on(i.EVENT.INVITATION_CANCELLED,this.handleInvitationCancelled,this),wx.$TSignaling.on(i.EVENT.INVITATION_TIMEOUT,this.handleInvitationTimeout,this),wx.$TSignaling.on(i.EVENT.SDK_READY,this.handleSDKReady,this),wx.$TSignaling.on(i.EVENT.KICKED_OUT,this.handleKickedOut,this)}_removeTSignalingEvent(){wx.$TSignaling.off(i.EVENT.NEW_INVITATION_RECEIVED,this.handleNewInvitationReceived),wx.$TSignaling.off(i.EVENT.INVITEE_ACCEPTED,this.handleInviteeAccepted),wx.$TSignaling.off(i.EVENT.INVITEE_REJECTED,this.handleInviteeRejected),wx.$TSignaling.off(i.EVENT.INVITATION_CANCELLED,this.handleInvitationCancelled),wx.$TSignaling.off(i.EVENT.INVITATION_TIMEOUT,this.handleInvitationTimeout),wx.$TSignaling.off(i.EVENT.SDK_READY,this.handleSDKReady),wx.$TSignaling.off(i.EVENT.KICKED_OUT,this.handleKickedOut)}async onRemoteUserJoin(t){const{userID:e,userList:i,playerList:a}=t.data;console.log(m,"REMOTE_USER_JOIN",t,e),this.data.playerList=a.length>0?await this.getUserProfile(a):this.data.playerList,this.data._connectUserIDList=[...this.data._connectUserIDList,e],this.data.startTalkTime||(this.data.startTalkTime=Date.now()),this.TRTCCallingDelegate.onUserEnter({userID:t.data.userID,playerList:this.data.playerList}),console.log(m,"REMOTE_USER_JOIN","playerList:",this.data.playerList,"userList:",i)}async onRemoteUserLeave(t){const{userID:e,userList:i,playerList:a}=t.data;if(console.log(m,"REMOTE_USER_LEAVE",t,t.data.userID),e){if(this.data.playerList=this.data.playerList.filter((t=>t.userID!==e)),a.length>0)return void this.TRTCCallingDelegate.onUserLeave({userID:e,playerList:this.data.playerList});this.lastOneHangup({userIDList:[t.data.userID],callType:this.data.config.type,callEnd:Math.round((Date.now()-this.data.startTalkTime)/1e3)}),this.data.startTalkTime=0}console.log(m,"REMOTE_USER_LEAVE","playerList:",a,"userList:",i)}onLocalNetStateUpdate(t){const{netStatus:e}=t.data.pusher;console.log(m,"onLocalNetStateUpdate",e),this.data.pusher=t.data.pusher,this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}async onRemoteNetStateUpdate(t){const{playerList:e}=t.data;console.log(m,"onRemoteNetStateUpdate",e),this.data.playerList=this._updateUserProfile(this.data.playerList,e),this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}onError(t){console.log(m,"onError",t)}onRemoteVideoAdd(t){console.log("* room REMOTE_VIDEO_ADD",t);const{player:e}=t.data;this.setPlayerAttributesHandler(e,{muteVideo:!1})}onRemoteVideoRemove(t){console.log("* room REMOTE_VIDEO_REMOVE",t);const{player:e}=t.data;this.setPlayerAttributesHandler(e,{muteVideo:!0})}async onRemoteAudioAdd(t){console.log("* room REMOTE_AUDIO_ADD",t);const e=await this.getUserProfile([t.data.player]);this.setPlayerAttributesHandler(e[0],{muteAudio:!1})}onRemoteAudioRemove(t){console.log("* room REMOTE_AUDIO_REMOVE",t);const{player:e}=t.data;this.setPlayerAttributesHandler(e,{muteAudio:!0})}async onRemoteAudioVolumeUpdate(t){console.log("* room REMOTE_AUDIO_VOLUME_UPDATE",t);const{playerList:e}=t.data;this.data.playerList=this._updateUserProfile(this.data.playerList,e),this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}onLocalAudioVolumeUpdate(t){const{pusher:e}=t.data;this.data.pusher=e,this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}_addTRTCEvent(){this.TRTC.on(this.TRTC.EVENT.REMOTE_USER_JOIN,this.onRemoteUserJoin,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_USER_LEAVE,this.onRemoteUserLeave,this),this.TRTC.on(this.TRTC.EVENT.LOCAL_NET_STATE_UPDATE,this.onLocalNetStateUpdate,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_NET_STATE_UPDATE,this.onRemoteNetStateUpdate,this),this.TRTC.on(this.TRTC.EVENT.ERROR,this.onError,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_VIDEO_ADD,this.onRemoteVideoAdd,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_VIDEO_REMOVE,this.onRemoteVideoRemove,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_AUDIO_ADD,this.onRemoteAudioAdd,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_AUDIO_REMOVE,this.onRemoteAudioRemove,this),this.TRTC.on(this.TRTC.EVENT.REMOTE_AUDIO_VOLUME_UPDATE,this.onRemoteAudioVolumeUpdate,this),this.TRTC.on(this.TRTC.EVENT.LOCAL_AUDIO_VOLUME_UPDATE,this.onLocalAudioVolumeUpdate,this)}_removeTRTCEvent(){this.TRTC.off(this.TRTC.EVENT.REMOTE_USER_JOIN,this.onRemoteUserJoin),this.TRTC.off(this.TRTC.EVENT.REMOTE_USER_LEAVE,this.onRemoteUserLeave),this.TRTC.off(this.TRTC.EVENT.LOCAL_NET_STATE_UPDATE,this.onLocalNetStateUpdate),this.TRTC.off(this.TRTC.EVENT.REMOTE_NET_STATE_UPDATE,this.onRemoteNetStateUpdate),this.TRTC.off(this.TRTC.EVENT.ERROR,this.onError),this.TRTC.off(this.TRTC.EVENT.REMOTE_VIDEO_ADD,this.onRemoteVideoAdd),this.TRTC.off(this.TRTC.EVENT.REMOTE_VIDEO_REMOVE,this.onRemoteVideoRemove),this.TRTC.off(this.TRTC.EVENT.REMOTE_AUDIO_ADD,this.onRemoteAudioAdd),this.TRTC.off(this.TRTC.EVENT.REMOTE_AUDIO_REMOVE,this.onRemoteAudioRemove),this.TRTC.off(this.TRTC.EVENT.REMOTE_AUDIO_VOLUME_UPDATE,this.onRemoteAudioVolumeUpdate),this.TRTC.off(this.TRTC.EVENT.LOCAL_AUDIO_VOLUME_UPDATE,this.onLocalAudioVolumeUpdate)}initTRTC(){const t=this.TRTC.createPusher({beautyLevel:5});this.data.pusher=t.pusherAttributes}enterRoom(t){this._addTRTCEvent();const{roomID:e}=t,i=Object.assign(this.data.config,{roomID:e,enableMic:!0,autopush:!0,enableAgc:!0,enableAns:!0,enableCamera:t.callType===u.VIDEO});this.data._unHandledInviteeList.length>0&&this._setUnHandledInviteeList(this.data.config.userID),this.data.enterRoomStatus=!0,this.data.pusher=this.TRTC.enterRoom(i),this.TRTC.getPusherInstance().start()}exitRoom(t=0,e){const{userID:i}=this.data.config;this.TRTC.getPusherInstance().stop();const a=this.TRTC.exitRoom();switch(e){case"lineBusy":this.TRTCCallingDelegate.onLineBusy({userID:i,callEnd:t});break;case"reject":this.TRTCCallingDelegate.onReject({userID:i,callEnd:t});break;default:this.TRTCCallingDelegate.onCallEnd({userID:i,callEnd:t})}this.data.pusher=a.pusher,this.data.playerList=a.playerList,this.data._unHandledInviteeList=[],this.data.enterRoomStatus=!1,this.data.isCallEnd=!0,this.initTRTC(),this._removeTRTCEvent()}setPusherAttributesHandler(t){this.data.pusher=this.TRTC.setPusherAttributes(t),this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}async setPlayerAttributesHandler(t,e){const i=this.TRTC.setPlayerAttributes(t.streamID,e);console.warn("setPlayerAttributesHandler",i),this.data.playerList=i.length>0?this._updateUserProfile(this.data.playerList,i):this.data.playerList,this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}_mutePlayerAudio(t){const e=t.currentTarget.dataset.value;e.hasAudio&&e.muteAudio?this.setPlayerAttributesHandler(e,{muteAudio:!1}):!e.hasAudio||e.muteAudio||this.setPlayerAttributesHandler(e,{muteAudio:!0})}_mutePlayerVideo(t){const e=t.currentTarget.dataset.value;e.hasVideo&&e.muteVideo?this.setPlayerAttributesHandler(e,{muteVideo:!1}):!e.hasVideo||e.muteVideo||this.setPlayerAttributesHandler(e,{muteVideo:!0})}_pusherAudioHandler(){this.data.pusher.enableMic?(this.setPusherAttributesHandler({enableMic:!1}),this.TRTC.getPusherInstance().setMICVolume({volume:0})):(this.setPusherAttributesHandler({enableMic:!0}),this.TRTC.getPusherInstance().setMICVolume({volume:100}))}_pusherVideoHandler(){this.data.pusher.enableCamera?this.setPusherAttributesHandler({enableCamera:!1}):this.setPusherAttributesHandler({enableCamera:!0})}async login(t){return wx.$TSignaling.setLogLevel(0),this.data.config.userID=t.userID,this.data.config.userSig=t.userSig,new Promise(((e,i)=>{wx.$TSignaling.login({userID:t.userID,userSig:t.userSig}).then((t=>(console.log(m,"login","IM login success",t),this._reset(),this._addTSignalingEvent(),this.initTRTC(),this.TSignalingResolve=e,null)))}))}async logout(){this.data.callStatus!==n.CALLING&&this.data.callStatus!==n.CONNECTED||(this.data.isSponsor?await this.hangup():await this.reject()),this._reset(),wx.$TSignaling.logout({userID:this.data.config.userID,userSig:this.data.config.userSig}).then((t=>(console.log(m,"logout","IM logout success"),this._removeTSignalingEvent(),this._removeTRTCEvent(),t))).catch((t=>{throw console.error(m,"logout","IM logout failure"),new Error(t)}))}on(t,e,i){this._emitter.on(t,e,i)}off(t,e){this._emitter.off(t,e)}async call(t){try{await this.callExperimentalAPI(g.BASE),await this.checkDevicePermissions()}catch(t){throw new Error(`${m}.call - error:${JSON.stringify(t)}`)}const{userID:e,type:i}=t,a=Math.floor(2147483646*Math.random()+1);this.enterRoom({roomID:a,callType:i});try{const s=await this.TSignalingClient.invite({roomID:a,...t});return console.log(`${m} call(userID: ${e}, type: ${i}) success, ${s}`),this.data.config.type=i,this.data.invitation.inviteID=s.inviteID,this.data.invitation.inviter=this.data.config.userID,this.data.invitation.type=i,this.data.invitation.roomID=a,this.data.isSponsor=!0,this.data._unHandledInviteeList=[e],this._setCallStatus(n.CALLING),this._getUserProfile([e]),{data:s.data,pusher:this.data.pusher}}catch(t){console.log(`${m} call(userID:${e},type:${i}) failed', error: ${t}`)}}async groupCall(t){try{await this.callExperimentalAPI(g.PRO)}catch(t){throw new Error(`${m}.call - error:${JSON.stringify(t)}`)}const{type:e}=t,i=this.data.roomID||Math.floor(2147483646*Math.random()+1);this.enterRoom({roomID:i,callType:e});try{let a=[...this.data.invitation.inviteID];const s=await this.TSignalingClient.inviteGroup({roomID:i,...t});return t.groupID||0===s.code&&s.data.map((t=>(a=[...a,t.inviteID],t))),this.data.config.type=t.type,t.groupID?this.data.invitation.inviteID=s.inviteID:this.data.groupInviteID=a,this.data.invitation.inviter=this.data.config.userID,this.data.invitation.type=e,this.data.invitation.roomID=i,this.data.isSponsor=!0,this.data._isGroupCall=!0,this.data._groupID=t.groupID||"",this.data._unHandledInviteeList=[...t.userIDList],this._setCallStatus(n.CALLING),this._getUserProfile(t.userIDList),console.log(m,"inviteInGroup OK",s),{data:s.data,pusher:this.data.pusher}}catch(t){console.log(m,"inviteInGroup failed",t)}}async accept(){try{await this.checkDevicePermissions()}catch(t){throw new Error(`${m}.call - error:${JSON.stringify(t)}`)}return new Promise(((t,e)=>{if(console.log(m,"accept() inviteID: ",this.data.invitation.inviteID),this.data.callStatus===n.IDLE)throw new Error("The call was cancelled");this.data.callStatus===n.CALLING&&(this.data.config.type===u.VIDEO?wx.createLivePusherContext().stopPreview({success:()=>{const i=setTimeout((async()=>{clearTimeout(i),this.handleAccept(t,e)}),0)}}):this.handleAccept(t,e))}))}async handleAccept(t,e){this.enterRoom({roomID:this.data.invitation.roomID,callType:this.data.config.type}),this._setCallStatus(n.CONNECTED);const i=await this.TSignalingClient.accept({inviteID:this.data.invitation.inviteID,type:this.data.config.type});return 0===i.code?(console.log(m,"accept OK"),this._getGroupCallFlag()&&this._setUnHandledInviteeList(this._getUserID()),t({message:i.data.message,pusher:this.data.pusher})):(console.error(m,"accept failed",i),e(i))}async reject(){if(this.data.invitation.inviteID){const t=await this.TSignalingClient.reject({inviteID:this.data.invitation.inviteID,type:this.data.config.type});return 0===t.code&&(console.log(m,"reject OK",t),this._reset()),console.log(m,"reject failed",t),t}return console.warn(`${m} 未收到邀请，无法拒绝`),"未收到邀请，无法拒绝"}async hangup(){console.log(m,"hangup.isSponsor",this.data.isSponsor);let t=null;if(this.data.isSponsor&&this.data.callStatus===n.CALLING){const e=[...this.data.groupInviteID];this.data.invitation.inviteID&&e.push(this.data.invitation.inviteID),console.log(m,"cancel() inviteID: ",e),t=await this.TSignalingClient.cancel({inviteIDList:e,callType:this.data.invitation.type}),this.data.isCallEnd=!0}return this._reset(),t}async lastOneHangup(t){const e=this._getGroupCallFlag();await this.TSignalingClient.lastOneHangup({isGroup:e,groupID:this.data._groupID,...t}),this._reset()}_getGroupCallFlag(){return this.data._isGroupCall}_setUnHandledInviteeList(t,e){const i=[...this.data._unHandledInviteeList].filter((e=>e!==t));this.data._unHandledInviteeList=i,e&&e(i)}_getUserID(){return this.data.config.userID}_setCallStatus(t){switch(console.log("进入callStatus",t),this.data.callStatus=t,t){case n.CONNECTED:if(this.data.timer)return;this.data.timer=setInterval((()=>{this.data.chatTime=function(t){const e=t;let i,a,s,n;return e>=3600?(a=parseInt(e/3600)<10?`0${parseInt(e/3600)}`:parseInt(e/3600),s=parseInt(e%60/60)<10?`0${parseInt(e%60/60)}`:parseInt(e%60/60),n=e%3600<10?"0"+e%3600:e%3600,n>60&&(s=parseInt(n/60)<10?`0${parseInt(n/60)}`:parseInt(n/60),n=n%60<10?"0"+n%60:n%60),i=`${a}:${s}:${n}`):e>=60&&e<3600?(s=parseInt(e/60)<10?`0${parseInt(e/60)}`:parseInt(e/60),n=e%60<10?"0"+e%60:e%60,i=`00:${s}:${n}`):e<60&&(n=e<10?`0${e}`:e,i=`00:00:${n}`),i}(this.data.chatTimeNum),this.data.chatTimeNum+=1,this.data.pusher.chatTime=this.data.chatTime,this.data.pusher.chatTimeNum=this.data.chatTimeNum,this.TRTCCallingDelegate.onUserUpdate({pusher:this.data.pusher,playerList:this.data.playerList})}),1e3);break;case n.IDLE:clearInterval(this.data.timer),this.data.timer=null,this.data.chatTime="00:00:00",this.data.chatTimeNum=0}}_reset(t,e){console.log(m," _reset()",this.data.enterRoomStatus),this.data.enterRoomStatus&&this.exitRoom(t,e),this._setCallStatus(n.IDLE),this.data.config.type=u.AUDIO,this.initData()}async startRemoteView(t){this.data.playerList.forEach((e=>{if(e.userID===t)return e.muteVideo=!1,void console.log(`${m}, startRemoteView(${t})`)}))}stopRemoteView(t){this.data.playerList.forEach((e=>{if(e.userID===t)return e.muteVideo=!0,void console.log(`${m}, stopRemoteView(${t})`)}))}openCamera(){this.data.pusher.enableCamera||this._pusherVideoHandler(),console.log(`${m}, openCamera() pusher: ${this.data.pusher}`)}closeCamera(){this.data.pusher.enableCamera&&this._pusherVideoHandler(),console.log(`${m}, closeCamera() pusher: ${this.data.pusher}`)}switchCamera(){if(this.data.callStatus!==n.CONNECTED){const t="front"===this.data.pusher.frontCamera?"back":"front";this.setPusherAttributesHandler({frontCamera:t}),wx.createLivePusherContext().switchCamera()}else this.TRTC.getPusherInstance().switchCamera();console.log(`${m}, switchCamera(), frontCamera${this.data.pusher.frontCamera}`)}openMicrophone(){this.data.pusher.enableMic||this._pusherAudioHandler(),console.log(`${m}, openMicrophone() pusher: ${this.data.pusher}`)}closeMicrophone(){this.data.pusher.enableMic&&this._pusherAudioHandler(),console.log(`${m}, closeMicrophone() pusher: ${this.data.pusher}`)}selectAudioPlaybackDevice(t){let e=!1;switch(t){case"speaker":e=!0;break;case"ear":e=!1}return this.setHandsFree(e)}setHandsFree(t){return this.data.soundMode=t?"speaker":"ear",console.log(`${m}, setHandsFree() result: ${this.data.soundMode}`),this.data.soundMode}async switchAudioCall(){if(this._isGroupCall)console.warn(`${m}.switchToAudioCall is not applicable to groupCall.`);else if(this.data.invitation.type!==u.AUDIO){if(this.data._switchCallModeStatus)return this.setSwitchCallModeStatus(!1),this.setPusherAttributesHandler({enableCamera:!1}),this.TSignalingClient.switchCallMode({userID:this.data._unHandledInviteeList[0]||this.data.playerList[0].userID,callType:this.data.invitation.type,roomID:this.data.invitation.roomID,mode:p});console.warn(`${m} audio and video call switching.`)}else console.warn(`${m} Now the call mode is audio call.`)}async switchCallMediaType(t){if(this._isGroupCall)console.warn(`${m}.switchToAudioCall is not applicable to groupCall.`);else if(this.data._switchCallModeStatus)switch(t){case u.AUDIO:return this.setSwitchCallModeStatus(!1),this.setPusherAttributesHandler({enableCamera:!1}),this.TSignalingClient.switchCallMode({userID:this.data._unHandledInviteeList[0]||this.data.playerList[0].userID,callType:this.data.invitation.type,roomID:this.data.invitation.roomID,mode:p});case u.VIDEO:throw console.warn(`${m} Audio switching Video is not supported yet`),new Error(`${m} Audio switching Video is not supported yet`)}else console.warn(`${m} audio and video call switching.`)}setSwitchCallModeStatus(t){this.data._switchCallModeStatus=t}async switchVideoCall(){if(this._isGroupCall)console.warn(`${m}.switchToVideoCall is not applicable to groupCall.`);else if(this.data.invitation.type!==u.VIDEO){if(this.data._switchCallModeStatus)return this.setSwitchCallModeStatus(!1),this.setPusherAttributesHandler({enableCamera:!0}),this.TSignalingClient.switchCallMode({userID:this.data.playerList[0].userID,callType:this.data.invitation.type,roomID:this.data.invitation.roomID,mode:I});console.warn(`${m} audio and video call switching.`)}else console.warn(`${m} Now the call mode is video call.`)}setSoundMode(t){let e=!1,i=!1;switch(t||(i=!0,t=this.data.soundMode),t){case"speaker":e=!0;break;case"ear":e=!1}return this.setHandsFree(i?!e:e)}_hangUp(){this.hangup()}_pusherStateChangeHandler(t){this.TRTC.pusherEventHandler(t)}_playerStateChange(t){this._emitter.emit(s.REMOTE_STATE_UPDATE,t)}_playerAudioVolumeNotify(t){this.data.playerList.length>0&&this.TRTC.playerAudioVolumeNotify(t)}_pusherAudioVolumeNotify(t){this.TRTC.pusherAudioVolumeNotify(t)}_updateUserProfile(t,e){if(0===e.length||0===t.length)return e;return e.map((e=>{const i=e,a=t.filter((t=>t.userID===e.userID));return i.avatar=a[0]&&a[0].avatar?a[0].avatar:"",i.nick=a[0]&&a[0].nick?a[0].nick:"",i}))}_getUserProfile(t){this.tim.getUserProfile({userIDList:t}).then((t=>{console.log("getUserProfile success",t),console.log(t.data),this.data.remoteUsers=t.data})).catch((t=>{console.warn("getUserProfile error:",t)}))}async getUserProfile(t,e="array"){if(0===t.length)return[];const i=t.map((t=>t.userID)),a=await this.tim.getUserProfile({userIDList:i});let s=null;switch(e){case"array":s=t.map(((t,e)=>(t.avatar=a.data[e].avatar,t.nick=a.data[e].nick,t)));break;case"map":s={},t.forEach(((t,e)=>{t.avatar=a.data[e].avatar,t.nick=a.data[e].nick,s[t.userID]=t}))}return s}setSelfInfo(t,e){return this.tim.updateMyProfile({nick:t,avatar:e})}_pusherNetStatus(t){this.TRTC.pusherNetStatusHandler(t)}_playNetStatus(t){this.TRTC.playerNetStatus(t)}_toggleViewSize(t){const{screen:e}=t.currentTarget.dataset;return console.log("get screen",e,t),1===this.data.playerList.length&&e!==this.data.screen&&this.data.invitation.type===u.VIDEO&&(this.data.screen=e),this.data.screen}getTim(){return this.tim}destroyed(){this.data.callStatus!==n.CALLING&&this.data.callStatus!==n.CONNECTED||(this.data.isSponsor?this.hangup():this.reject()),this._reset(),this._removeTSignalingEvent(),this._removeTRTCEvent()}async checkDevicePermissions(){return new Promise((async(t,e)=>{wx.getSetting&&wx.getSetting()||t(),wx.authorize({scope:"scope.record"}),wx.authorize({scope:"scope.camera"}),wx.getSetting().then((i=>{console.log("getSetting",i),i.authSetting["scope.camera"]&&i.authSetting["scope.record"]?t():e("camera or record not authorized")}))}))}async callExperimentalAPI(t){return new Promise((async(e,i)=>{try{const a=await this.tim.callExperimentalAPI("isCommercialAbilityEnabled",t);a.data.enabled?e(a):i("The package vou purchased does not support this ability")}catch(t){2905===t.code?i("tim version is too old, Please upgrade version >= 2.20.1"):i("The package vou purchased does not support this ability")}}))}}export{E as AUDIO_PLAYBACK_DEVICE,s as EVENT,u as MEDIA_TYPE,n as STATUS,v as TUICallEngine,v as default};
